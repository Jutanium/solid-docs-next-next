---
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";
import LeftSidebar from "../components/LeftSidebar.astro";
import RightSidebar from "../components/RightSidebar.astro";
import Header from "../components/Header.astro";

interface Props {
  content: CollectionEntry<"docs">["data"];
  headings: MarkdownHeading[];
}

const { content, headings } = Astro.props;

const currentPage = Astro.url.pathname;
---

<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/global.css" />
    <title>{content.title}</title>
  </head>
  <body>
    <Header />
    <main>
      <aside class="left-side">
        <LeftSidebar currentPage={currentPage} />
      </aside>
      <div class="content-container">
        <article class="prose">
          <slot />
        </article>
      </div>
      <aside class="right-side">
        <RightSidebar headings={headings} />
      </aside>
    </main>
  </body>
</html>

<style>
  main {
    display: flex;
    flex-direction: row;
    padding-top: var(--header-height);
  }

  .content-container {
    width: 100%;
    max-width: 65ch;
    margin-inline: auto;
    padding-block: var(--spacing-4);
    padding-inline: var(--spacing-10);
  }

  aside {
    position: sticky;
    top: var(--header-height);
    height: 100%;
    width: 100%;
    overflow-y: auto;
  }

  .left-side {
    max-width: 300px;
  }

  .right-side {
    max-width: 240px;
  }
</style>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  document.documentElement.setAttribute("data-theme", theme);
  window.localStorage.setItem("theme", theme);
</script>
